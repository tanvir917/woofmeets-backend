// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum loginProvider {
  LOCAL
  FACEBOOK
  GOOGLE
}

enum otpType {
  EMAIL
  PHONE
}

enum otpGenerationType {
  FORGET_PASSWORD
  PHONE_VERIFICATION
  APPOINTMENT
}

enum petTypeEnum {
  DOG
  CAT
  ANY
}

enum backGroundCheckEnum {
  NONE
  BASIC
  ENHANCE
}

model User {
  id            BigInt        @id @default(autoincrement())
  opk           String        @unique
  email         String        @unique
  emailVerified Boolean?      @default(true)
  firstName     String
  lastName      String
  password      String?
  zipcode       String?
  image         Json?
  loginProvider loginProvider
  timezone      String?
  facebook      String?
  google        Boolean?
  meta          Json?
  createdAt     DateTime      @default(now()) @db.Timestamptz(3)
  updatedAt     DateTime?     @updatedAt @db.Timestamptz(3)
  deletedAt     DateTime?     @db.Timestamptz(3)
  provider      Provider?
  basicInfo     BasicInfo?
}

model Country {
  id           Int         @id @default(autoincrement())
  name         String
  code         String
  currency     String?
  currencyCode String?
  exchangeRate Float?
  alpha2       String?
  alpha3       String?
  meta         Json?
  createdAt    DateTime    @default(now()) @db.Timestamptz(3)
  updatedAt    DateTime?   @updatedAt @db.Timestamptz(3)
  deletedAt    DateTime?   @db.Timestamptz(3)
  BasicInfo    BasicInfo[]
}

model ServiceType {
  id                              Int                @id @default(autoincrement())
  name                            String
  displayName                     String
  slug                            String             @unique
  description                     String?
  shortDescription                String?
  icon                            String
  active                          Boolean            @default(true)
  location                        String?
  petType                         petTypeEnum        @default(ANY)
  browsable                       Boolean            @default(true)
  start_date_selector_description String?
  end_date_selector_description   String?
  appRequired                     Boolean            @default(false)
  sequence                        Int?
  meta                            Json?
  createdAt                       DateTime           @default(now()) @db.Timestamptz(3)
  updatedAt                       DateTime?          @updatedAt @db.Timestamptz(3)
  deletedAt                       DateTime?          @db.Timestamptz(3)
  providerServices                ProviderServices[]
}

model Provider {
  id               BigInt              @id @default(autoincrement())
  userId           BigInt              @unique
  user             User                @relation(fields: [userId], references: [id])
  slug             String              @unique
  havePets         Boolean             @default(false)
  quizPassed       Boolean             @default(false)
  photoSubmitted   Boolean             @default(false)
  backGroundCheck  backGroundCheckEnum @default(NONE)
  latitude         Float?
  longitude        Float?
  meta             Json?
  createdAt        DateTime            @default(now()) @db.Timestamptz(3)
  updatedAt        DateTime?           @updatedAt @db.Timestamptz(3)
  deletedAt        DateTime?           @db.Timestamptz(3)
  providerServices ProviderServices[]
  providerDetails  ProviderDetails?
}

model ProviderServices {
  id                     BigInt      @id @default(autoincrement())
  serviceTypeId          Int
  serviceType            ServiceType @relation(fields: [serviceTypeId], references: [id])
  providerId             BigInt
  provider               Provider    @relation(fields: [providerId], references: [id])
  slug                   String      @unique
  isActive               Boolean     @default(true)
  isAway                 Boolean     @default(false)
  acceptsNewAppointments Boolean     @default(true)
  acceptsNewCustomers    Boolean     @default(true)
  isApproved             Boolean     @default(true)
  petPerDay              Int         @default(1)
  logStay                Boolean     @default(true)
  meta                   Json?
  createdAt              DateTime    @default(now()) @db.Timestamptz(3)
  updatedAt              DateTime?   @updatedAt @db.Timestamptz(3)
  deletedAt              DateTime?   @db.Timestamptz(3)
}

model BasicInfo {
  id               BigInt    @id @default(autoincrement())
  userId           BigInt    @unique
  user             User      @relation(fields: [userId], references: [id])
  dob              DateTime  @db.Date
  addressLine1     String
  addressLine2     String?
  street           String?
  city             String
  state            String
  zipCode          String
  countryId        Int
  country          Country   @relation(fields: [countryId], references: [id])
  latitude         Float?    @default(0)
  longitude        Float?    @default(0)
  detailsSubmitted Boolean   @default(false)
  meta             Json?
  createdAt        DateTime  @default(now()) @db.Timestamptz(3)
  updatedAt        DateTime? @updatedAt @db.Timestamptz(3)
  deletedAt        DateTime? @db.Timestamptz(3)
}

model ProviderDetails {
  id                     BigInt    @id @default(autoincrement())
  providerId             BigInt    @unique
  provider               Provider  @relation(fields: [providerId], references: [id])
  headline               String
  yearsOfExperience      Float
  dogsExperience         String?
  walkingExperience      String?
  requestedDogInfo       String?
  experienceDescription  String
  environmentDescription String
  scheduleDescription    String
  detailsSubmitted       Boolean   @default(false)
  meta                   Json?
  createdAt              DateTime  @default(now()) @db.Timestamptz(3)
  updatedAt              DateTime? @updatedAt @db.Timestamptz(3)
  deletedAt              DateTime? @db.Timestamptz(3)
}

model Otp {
  id             BigInt            @id @default(autoincrement())
  recipient      String
  code           String
  type           otpType
  generationType otpGenerationType
  expireAt       DateTime          @db.Timestamptz(3)
  delivered      Boolean
  attempt        Int               @default(0)
  success        Boolean           @default(false)
  createdAt      DateTime          @default(now()) @db.Timestamptz(3)
  updatedAt      DateTime?         @updatedAt @db.Timestamptz(3)
  deletedAt      DateTime?         @db.Timestamptz(3)
  OtpLog         OtpLog[]
}

model OtpLog {
  id        BigInt    @id @default(autoincrement())
  recipient String
  otpId     BigInt
  otp       Otp       @relation(fields: [otpId], references: [id])
  createdAt DateTime  @default(now()) @db.Timestamptz(3)
  updatedAt DateTime? @updatedAt @db.Timestamptz(3)
  deletedAt DateTime? @db.Timestamptz(3)
}
